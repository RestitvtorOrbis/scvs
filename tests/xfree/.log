Coverity Build Capture version 6.0.1 on Linux 2.6.32-41-generic i686
Internal version numbers: 1.5222:3042, 20120412041511UTC, p-berkeley-push-11376.367

gcc -std=c99  -I./ -I../../../include/ xfree_e01.c -o xfree_e01.o
gcc -std=c99  -I./ -I../../../include/ xfree_e02.c -o xfree_e02.o
2 C/C++ compilation units (100%) are ready for analysis
The cov-build utility completed successfully.
Coverity Static Analysis for C/C++ version 6.0.1 on Linux 2.6.32-41-generic i686
Internal version numbers: 1.5222:3042, 20120412041511UTC, p-berkeley-push-11376.367

[WARNING] This program requires 1536 MiB of free memory to run properly,
but this machine has only 497 MiB of physical memory.
It might run slowly due to insufficient memory.
Looking for translation units
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Computing links for 2 translation units
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Computing virtual overrides
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Computing callgraph
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Topologically sorting 3 functions
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Computing node costs
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Starting analysis run
|0----------25-----------50----------75---------100|
****************************************************
[STATUS] Starting analysis run (types/warnings pass)
|0----------25-----------50----------75---------100|
****************************************************
Analysis summary report:
------------------------
Files analyzed                  : 2
Total LoC input to cov-analyze  : 7665
Functions analyzed              : 3
Paths analyzed                  : 27
Time taken by Coverity analysis : 00:00:00
Defect occurrences found        : 4 Total
                                  1 BAD_FREE
                                  2 RESOURCE_LEAK
                                  1 SECURE_CODING

Error: BAD_FREE:
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e02.c:70:
cond_false: Condition "argc == 2", taking false branch
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e02.c:85:
else_branch: Reached else branch
/home/benito/Work/scvs/tests/Clause5/34/xfree_e02.c:86:
array_assign: Assigning: "c_str" = ""usage: $>a.exe[string]"".
/home/benito/Work/scvs/tests/Clause5/34/xfree_e02.c:90:
incorrect_free: "free(void *)" frees incorrect pointer "c_str".
Error: RESOURCE_LEAK:
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:83:
alloc_fn: Storage is returned from allocation function "realloc(void *, size_t)".
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:83:
var_assign: Assigning: "p" = storage returned from "realloc(buf, 512U)".
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:83:
cond_true: Condition "(p = (char *)realloc(buf, 512U)) != NULL", taking true branch
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:84:
cond_true: Condition "strlen(s) <= 255U", taking true branch
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:85:
noescape: Resource "p" is not freed or pointed-to in function "strcpy(char * restrict, char const * restrict)".
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:87:
if_fallthrough: Falling through to end of if statement
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:89:
if_end: End of if statement
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:90:
if_fallthrough: Falling through to end of if statement
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:92:
if_end: End of if statement
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:93:
leaked_storage: Variable "p" going out of scope leaks the storage it points to.
Error: RESOURCE_LEAK:
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:83:
alloc_fn: Storage is returned from allocation function "realloc(void *, size_t)".
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:83:
var_assign: Assigning: "p" = storage returned from "realloc(buf, 512U)".
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:83:
cond_true: Condition "(p = (char *)realloc(buf, 512U)) != NULL", taking true branch
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:84:
cond_false: Condition "strlen(s) <= 255U", taking false branch
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:87:
else_branch: Reached else branch
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:90:
if_fallthrough: Falling through to end of if statement
path:/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:92:
if_end: End of if statement
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:93:
leaked_storage: Variable "p" going out of scope leaks the storage it points to.
Error: SECURE_CODING:
/home/benito/Work/scvs/tests/Clause5/34/xfree_e01.c:85:
secure_coding: [VERY RISKY]. Using "strcpy(char * restrict, char const * restrict)" can cause a buffer overflow when done incorrectly.  If the destination string of a strcpy() is not large enough then anything might happen. Use strncpy() instead.
